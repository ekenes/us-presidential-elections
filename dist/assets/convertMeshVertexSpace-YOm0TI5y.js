import{cd as s,s as m,a0 as p}from"./index-GOO0DjDp.js";import{p as n}from"./MeshVertexAttributes-Dyudu4ee.js";import{B as a}from"./vertexSpaceConversion-cFBTnkaa.js";import"./mat3-C-OMcVdC.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./vec32-Bq8LfEfc.js";import"./spatialReferenceEllipsoidUtils-CLmzFMqA.js";import"./computeTranslationToOriginAndRotation-C8WdtVmx.js";import"./projectPointToVector-DcIbqPS4.js";import"./meshVertexSpaceUtils-Dy_SZOm6.js";import"./MeshLocalVertexSpace-BqXq6JV3.js";import"./vec3-BSXX4O64.js";import"./BufferView-Bc_fuGNr.js";import"./vec2-c1cMo5Hj.js";import"./vec4-CkfdGPaO.js";async function j(t,o,r){await Promise.resolve(),s(r);const e=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!e)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...e,uv:p(t.vertexAttributes.uv),color:p(t.vertexAttributes.color)}),o);return i.transform=null,i}export{j as convertMeshVertexSpace};
