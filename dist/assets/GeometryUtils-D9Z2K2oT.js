import{fp as z}from"./index-GOO0DjDp.js";const A=512,F=29,G=24;var L;(function(_){_[_.FilterFlags=0]="FilterFlags",_[_.Animation=1]="Animation",_[_.GPGPU=2]="GPGPU",_[_.VV=3]="VV",_[_.DD0=4]="DD0",_[_.DD1=5]="DD1",_[_.DD2=6]="DD2",_[_.LocalTimeOrigin=7]="LocalTimeOrigin"})(L||(L={}));const O=6,U=1.05,C=2,j=10,J=256,K=32,W=512,S=512;var P,g;(function(_){_[_.Unknown=0]="Unknown",_[_.Point=1]="Point",_[_.LineString=2]="LineString",_[_.Polygon=3]="Polygon"})(P||(P={}));let f=class D{constructor(i,t){this.x=i,this.y=t}clone(){return new D(this.x,this.y)}equals(i,t){return i===this.x&&t===this.y}isEqual(i){return i.x===this.x&&i.y===this.y}setCoords(i,t){return this.x=i,this.y=t,this}normalize(){const i=this.x,t=this.y,s=Math.sqrt(i*i+t*t);return this.x/=s,this.y/=s,this}rightPerpendicular(){const i=this.x;return this.x=this.y,this.y=-i,this}leftPerpendicular(){const i=this.x;return this.x=-this.y,this.y=i,this}move(i,t){return this.x+=i,this.y+=t,this}assign(i){return this.x=i.x,this.y=i.y,this}assignAdd(i,t){return this.x=i.x+t.x,this.y=i.y+t.y,this}assignSub(i,t){return this.x=i.x-t.x,this.y=i.y-t.y,this}rotate(i,t){const s=this.x,h=this.y;return this.x=s*i-h*t,this.y=s*t+h*i,this}scale(i){return this.x*=i,this.y*=i,this}length(){const i=this.x,t=this.y;return Math.sqrt(i*i+t*t)}sub(i){return this.x-=i.x,this.y-=i.y,this}add(i){return this.x+=i.x,this.y+=i.y,this}static distance(i,t){const s=t.x-i.x,h=t.y-i.y;return Math.sqrt(s*s+h*h)}static add(i,t){return new D(i.x+t.x,i.y+t.y)}static sub(i,t){return new D(i.x-t.x,i.y-t.y)}};class v{constructor(i,t,s){this.ratio=i,this.x=t,this.y=s}}let Y=class{constructor(i,t,s,h=8,e=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=h,this._pixelMargin=e,this._tileSize=S*h,this._dz=i,this._yPos=t,this._xPos=s}setPixelMargin(i){i!==this._pixelMargin&&(this._pixelMargin=i,this.setExtent(this._extent))}setExtent(i){this._extent=i,this._finalRatio=this._tileSize/i*(1<<this._dz);let t=this._pixelRatio*this._pixelMargin;t/=this._finalRatio;const s=i>>this._dz;t>s&&(t=s),this._margin=t,this._xmin=s*this._xPos-t,this._ymin=s*this._yPos-t,this._xmax=this._xmin+s+2*t,this._ymax=this._ymin+s+2*t}reset(i){this._type=i,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(i,t){this._pushLine(),this._prevIsIn=this._isIn(i,t),this._moveTo(i,t,this._prevIsIn),this._prevPt=new f(i,t),this._firstPt=new f(i,t),this._dist=0}lineTo(i,t){const s=this._isIn(i,t),h=new f(i,t),e=f.distance(this._prevPt,h);let n,x,l,r,d,m,y,p;if(s)this._prevIsIn?this._lineTo(i,t,!0):(n=this._prevPt,x=h,l=this._intersect(x,n),this._start=this._dist+e*(1-this._r),this._lineTo(l.x,l.y,!0),this._lineTo(x.x,x.y,!0));else if(this._prevIsIn)x=this._prevPt,n=h,l=this._intersect(x,n),this._lineTo(l.x,l.y,!0),this._lineTo(n.x,n.y,!1);else{const a=this._prevPt,o=h;if(a.x<=this._xmin&&o.x<=this._xmin||a.x>=this._xmax&&o.x>=this._xmax||a.y<=this._ymin&&o.y<=this._ymin||a.y>=this._ymax&&o.y>=this._ymax)this._lineTo(o.x,o.y,!1);else{const c=[];if((a.x<this._xmin&&o.x>this._xmin||a.x>this._xmin&&o.x<this._xmin)&&(r=(this._xmin-a.x)/(o.x-a.x),p=a.y+r*(o.y-a.y),p<=this._ymin?m=!1:p>=this._ymax?m=!0:c.push(new v(r,this._xmin,p))),(a.x<this._xmax&&o.x>this._xmax||a.x>this._xmax&&o.x<this._xmax)&&(r=(this._xmax-a.x)/(o.x-a.x),p=a.y+r*(o.y-a.y),p<=this._ymin?m=!1:p>=this._ymax?m=!0:c.push(new v(r,this._xmax,p))),(a.y<this._ymin&&o.y>this._ymin||a.y>this._ymin&&o.y<this._ymin)&&(r=(this._ymin-a.y)/(o.y-a.y),y=a.x+r*(o.x-a.x),y<=this._xmin?d=!1:y>=this._xmax?d=!0:c.push(new v(r,y,this._ymin))),(a.y<this._ymax&&o.y>this._ymax||a.y>this._ymax&&o.y<this._ymax)&&(r=(this._ymax-a.y)/(o.y-a.y),y=a.x+r*(o.x-a.x),y<=this._xmin?d=!1:y>=this._xmax?d=!0:c.push(new v(r,y,this._ymax))),c.length===0)d?m?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):m?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(c.length>1&&c[0].ratio>c[1].ratio)this._start=this._dist+e*c[1].ratio,this._lineTo(c[1].x,c[1].y,!0),this._lineTo(c[0].x,c[0].y,!0);else{this._start=this._dist+e*c[0].ratio;for(let u=0;u<c.length;u++)this._lineTo(c[u].x,c[u].y,!0)}this._lineTo(o.x,o.y,!1)}}this._dist+=e,this._prevIsIn=s,this._prevPt=h}close(){if(this._line.length>2){const i=this._firstPt,t=this._prevPt;i.x===t.x&&i.y===t.y||this.lineTo(i.x,i.y);const s=this._line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(i=!0){return this._pushLine(),this._lines.length===0?null:(this._type===P.Polygon&&i&&V.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==P.LineString)throw new Error("Only valid for lines");this._pushLine();const i=this._lines,t=i.length;if(t===0)return null;const s=[];for(let h=0;h<t;h++)s.push({line:i[h],start:this._starts[h]||0});return s}_isIn(i,t){return i>=this._xmin&&i<=this._xmax&&t>=this._ymin&&t<=this._ymax}_intersect(i,t){let s,h,e;if(t.x>=this._xmin&&t.x<=this._xmax)h=t.y<=this._ymin?this._ymin:this._ymax,e=(h-i.y)/(t.y-i.y),s=i.x+e*(t.x-i.x);else if(t.y>=this._ymin&&t.y<=this._ymax)s=t.x<=this._xmin?this._xmin:this._xmax,e=(s-i.x)/(t.x-i.x),h=i.y+e*(t.y-i.y);else{h=t.y<=this._ymin?this._ymin:this._ymax,s=t.x<=this._xmin?this._xmin:this._xmax;const n=(s-i.x)/(t.x-i.x),x=(h-i.y)/(t.y-i.y);n<x?(e=n,h=i.y+n*(t.y-i.y)):(e=x,s=i.x+x*(t.x-i.x))}return this._r=e,new f(s,h)}_pushLine(){this._line&&(this._type===P.Point?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===P.LineString?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===P.Polygon&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(i,t,s){this._type!==P.Polygon?s&&(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),t=Math.round((t-(this._ymin+this._margin))*this._finalRatio),this._line.push(new f(i,t))):(s||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),t<this._ymin&&(t=this._ymin),t>this._ymax&&(t=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),t=Math.round((t-(this._ymin+this._margin))*this._finalRatio),this._line.push(new f(i,t)),this._isH=!1,this._isV=!1)}_lineTo(i,t,s){let h,e;if(this._type!==P.Polygon)if(s){if(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),t=Math.round((t-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(h=this._line[this._line.length-1],h.equals(i,t)))return;this._line.push(new f(i,t))}else this._line&&this._line.length>0&&this._pushLine();else if(s||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),t<this._ymin&&(t=this._ymin),t>this._ymax&&(t=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),t=Math.round((t-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){h=this._line[this._line.length-1];const n=h.x===i,x=h.y===t;if(n&&x)return;this._isH&&n||this._isV&&x?(h.x=i,h.y=t,e=this._line[this._line.length-2],e.x===i&&e.y===t?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(e=this._line[this._line.length-2],this._isH=e.x===i,this._isV=e.y===t)):(this._isH=e.x===i,this._isV=e.y===t)):(this._line.push(new f(i,t)),this._isH=n,this._isV=x)}else this._line.push(new f(i,t))}};class X{setExtent(i){this._ratio=i===4096?1:4096/i}get validateTessellation(){return this._ratio<1}reset(i){this._lines=[],this._line=null}moveTo(i,t){this._line&&this._lines.push(this._line),this._line=[];const s=this._ratio;this._line.push(new f(i*s,t*s))}lineTo(i,t){const s=this._ratio;this._line.push(new f(i*s,t*s))}close(){const i=this._line;i&&!i[0].isEqual(i[i.length-1])&&i.push(i[0])}result(){return this._line&&this._lines.push(this._line),this._lines.length===0?null:this._lines}}(function(_){_[_.sideLeft=0]="sideLeft",_[_.sideRight=1]="sideRight",_[_.sideTop=2]="sideTop",_[_.sideBottom=3]="sideBottom"})(g||(g={}));let V=class T{static simplify(i,t,s){if(!s)return;const h=-t,e=i+t,n=-t,x=i+t,l=[],r=[],d=s.length;for(let y=0;y<d;++y){const p=s[y];if(!p||p.length<2)continue;let a,o=p[0];const c=p.length;for(let u=1;u<c;++u)a=p[u],o.x===a.x&&(o.x<=h&&(o.y>a.y?(l.push(y),l.push(u),l.push(g.sideLeft),l.push(-1)):(r.push(y),r.push(u),r.push(g.sideLeft),r.push(-1))),o.x>=e&&(o.y<a.y?(l.push(y),l.push(u),l.push(g.sideRight),l.push(-1)):(r.push(y),r.push(u),r.push(g.sideRight),r.push(-1)))),o.y===a.y&&(o.y<=n&&(o.x<a.x?(l.push(y),l.push(u),l.push(g.sideTop),l.push(-1)):(r.push(y),r.push(u),r.push(g.sideTop),r.push(-1))),o.y>=x&&(o.x>a.x?(l.push(y),l.push(u),l.push(g.sideBottom),l.push(-1)):(r.push(y),r.push(u),r.push(g.sideBottom),r.push(-1)))),o=a}if(l.length===0||r.length===0)return;T.fillParent(s,r,l),T.fillParent(s,l,r);const m=[];T.calcDeltas(m,r,l),T.calcDeltas(m,l,r),T.addDeltas(m,s)}static fillParent(i,t,s){const h=s.length,e=t.length;for(let n=0;n<e;n+=4){const x=t[n],l=t[n+1],r=t[n+2],d=i[x][l-1],m=i[x][l];let y=8092,p=-1;for(let a=0;a<h;a+=4){if(s[a+2]!==r)continue;const o=s[a],c=s[a+1],u=i[o][c-1],w=i[o][c];switch(r){case g.sideLeft:case g.sideRight:if(I(d.y,u.y,w.y)&&I(m.y,u.y,w.y)){const M=Math.abs(w.y-u.y);M<y&&(y=M,p=a)}break;case g.sideTop:case g.sideBottom:if(I(d.x,u.x,w.x)&&I(m.x,u.x,w.x)){const M=Math.abs(w.x-u.x);M<y&&(y=M,p=a)}}}t[n+3]=p}}static calcDeltas(i,t,s){const h=t.length;for(let e=0;e<h;e+=4){const n=[],x=T.calcDelta(e,t,s,n);i.push(t[e]),i.push(t[e+1]),i.push(t[e+2]),i.push(x)}}static calcDelta(i,t,s,h){const e=t[i+3];if(e===-1)return 0;const n=h.length;return n>1&&h[n-2]===e?0:(h.push(e),T.calcDelta(e,s,t,h)+1)}static addDeltas(i,t){const s=i.length;let h=0;for(let e=0;e<s;e+=4){const n=i[e+3];n>h&&(h=n)}for(let e=0;e<s;e+=4){const n=t[i[e]],x=i[e+1],l=h-i[e+3];switch(i[e+2]){case g.sideLeft:n[x-1].x-=l,n[x].x-=l,x===1&&(n[n.length-1].x-=l),x===n.length-1&&(n[0].x-=l);break;case g.sideRight:n[x-1].x+=l,n[x].x+=l,x===1&&(n[n.length-1].x+=l),x===n.length-1&&(n[0].x+=l);break;case g.sideTop:n[x-1].y-=l,n[x].y-=l,x===1&&(n[n.length-1].y-=l),x===n.length-1&&(n[0].y-=l);break;case g.sideBottom:n[x-1].y+=l,n[x].y+=l,x===1&&(n[n.length-1].y+=l),x===n.length-1&&(n[0].y+=l)}}}};const I=(_,i,t)=>_>=i&&_<=t||_>=t&&_<=i,Z=Number.POSITIVE_INFINITY,R=Math.PI,ii=2*R,q=128/R,N=256/360,ti=R/180,$=1/Math.LN2;function b(_,i){return(_%=i)>=0?_:_+i}function si(_){return b(_*q,256)}function hi(_){return b(_*N,256)}function ni(_){return Math.log(_)*$}function ei(_,i,t){return _*(1-t)+i*t}const E=8,k=14,B=16;function _i(_){return E+Math.max((_-k)*B,0)}function li(_,i,t){let s,h,e,n=0;for(const x of t){s=x.length;for(let l=1;l<s;++l)h=x[l-1],e=x[l],h.y>i!=e.y>i&&((e.x-h.x)*(i-h.y)-(e.y-h.y)*(_-h.x)>0?n++:n--)}return n!==0}function xi(_,i,t,s){let h,e,n,x;const l=s*s;for(const r of t){const d=r.length;if(!(d<2)){h=r[0].x,e=r[0].y;for(let m=1;m<d;++m){if(n=r[m].x,x=r[m].y,z(_,i,h,e,n,x)<l)return!0;h=n,e=x}}}return!1}function ri(_,i){if(i===0||Number.isNaN(i))return _;const t=[],s=new f(0,0),h=new f(0,0),e=new f(0,0);for(let n=0;n<_.length;n++){const x=_[n],l=[];for(let r=0;r<x.length;r++){const d=x[r-1],m=x[r],y=x[r+1];r===0?s.setCoords(0,0):s.assignSub(m,d).normalize().rightPerpendicular(),r===x.length-1?h.setCoords(0,0):h.assignSub(y,m).normalize().rightPerpendicular(),e.assignAdd(s,h).normalize();const p=e.x*h.x+e.y*h.y;p!==0&&e.scale(1/p),l.push(f.add(m,e.scale(i)))}t.push(l)}return t}function ai(_,i,t,s){const h=new f(_[0],_[1]);if(h.scale(s),i==="viewport"){const e=-t*(Math.PI/180),n=Math.cos(e),x=Math.sin(e);h.rotate(n,x)}return h}export{G as A,F as G,li as I,L as J,O as K,xi as N,ri as P,U as R,X as _,b as a,ai as b,ni as c,_i as d,ii as e,si as f,Y as g,f as h,P as i,A as j,hi as l,j as m,R as o,ei as p,J as q,Z as r,ti as s,C as t,K as y,W as z};
