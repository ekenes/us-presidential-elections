import{I as y,ab as S,dy as f,U as c,aS as l,dA as s,bS as m,ag as R,G as g,b1 as p}from"./index-GOO0DjDp.js";import d from"./BinsQuery-D4xbd1hK.js";import"./queryUtils-CtEpta27.js";import"./json-Wa8cmqdu.js";function J(n){const t=n.geometry,a=n.toJSON(),e=a;let i,r,o;return t!=null&&(r=t.spatialReference,o=s(r),e.geometryType=m(t),e.geometry=JSON.stringify(t),e.inSR=o),a.outSR?(e.outSR=s(a.outSR),i=n.outSpatialReference):t&&(e.outSR=e.inSR,i=r),e.bin&&(e.bin=JSON.stringify(e.bin)),e.quantizationParameters&&(e.quantizationParameters=JSON.stringify(e.quantizationParameters)),e.outStatistics&&(e.outStatistics=JSON.stringify(e.outStatistics)),e.outTimeReference&&(e.outTimeReference=JSON.stringify(e.outTimeReference)),n.defaultSpatialReference&&R(r,i)&&(e.defaultSR=e.inSR,delete e.inSR,delete e.outSR),e}async function N(n,t,a){return O(n,t,a)}async function O(n,t,a={}){const e=typeof n=="string"?y(n):n,i=t.geometry?[t.geometry]:[],r=await S(i,null,{signal:a.signal}),o=r==null?void 0:r[0];o!=null&&((t=t.clone()).geometry=o);const u=f({...e.query,f:"json",...J(t)});return c(l(e.path,"queryBins"),{...a,query:{...u,...a.query}})}async function x(n,t,a){const{data:e}=await N(g(n),d.from(t),a);return p.fromJSON(e)}export{x as executeBinsQuery};
