import{ff as B,f1 as R,ce as G,f0 as O,cB as E,cL as d,k5 as T,k6 as U,cR as I,hW as b,mK as g,hs as V,mL as C}from"./index-C9i_GUWP.js";import{m as M,B as P,e as W,f as A,a as L,C as D,s as N}from"./dehydratedFeatureUtils-IpSczBwv.js";import{E as l,i as _}from"./IntersectorType-gQim6TH1.js";import{e as k,r as J}from"./mat4f64-q_b6UJoq.js";import{b as j,v as w}from"./sphere-6cJa0eww.js";import{e as z}from"./VertexAttribute-BfkzOMLV.js";class K{get ray(){return this._ray}get distanceInRenderSpace(){return this.distance==null?null:(R(f,this.ray.direction,this.distance),B(f))}withinDistance(e){return!!x(this)&&this.distanceInRenderSpace<=e}getIntersectionPoint(e){return!!x(this)&&(R(f,this.ray.direction,this.distance),O(e,this.ray.origin,f),!0)}getTransformedNormal(e){return d(h,this.normal),h[3]=0,U(h,h,this.transformation),d(e,h),E(e,e)}constructor(e){this.intersector=l.OBJECT,this.normal=G(),this.transformation=k(),this._ray=j(),this.init(e)}init(e){this.distance=this.target=this.drapedLayerOrder=this.renderPriority=null,this.intersector=l.OBJECT,w(e,this._ray)}set(e,r,t,i,n,a,c){this.intersector=e,this.distance=t,d(this.normal,i??I),b(this.transformation,n??J),this.target=r,this.drapedLayerOrder=a,this.renderPriority=c}copy(e){w(e.ray,this._ray),this.intersector=e.intersector,this.distance=e.distance,this.target=e.target,this.drapedLayerOrder=e.drapedLayerOrder,this.renderPriority=e.renderPriority,d(this.normal,e.normal),b(this.transformation,e.transformation)}}function x(s){return(s==null?void 0:s.distance)!=null}const f=G(),h=T();let q=class{constructor(e){this.layerViewUid=e}};class F extends q{constructor(e,r){super(e),this.graphicUid=r}}class H extends F{constructor(e,r,t,i,n){super(e,r),this.layerViewUid=e,this.graphicUid=r,this.triangleNr=t,this.baseBoundingSphere=i,this.numLodLevels=n}}let Q=class{constructor(e,r,t,i){this.material=e,this.bufferWriter=e.createBufferWriter(),this.vertexBufferLayout=this.bufferWriter.vertexBufferLayout,this.buffer=r,this.elementCount=t,this.boundingInfo=i}get numTriangles(){return this.elementCount/3}get numVertices(){return this.elementCount}computeUsedMemory(){return this.buffer.byteLength+C}getRenderGeometry(){return this}intersect(e,r,t,i,n,a,c,o){const u=this.bufferWriter,m=this.buffer;u.intersect(m,this.material.parameters,null,e,t,i,((p,y,$)=>v(p,y,$,e,r,a,c,n,o)))}};class X{constructor(e){this.engineGeometry=e}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.attributes.get(z.POSITION).indices.length}get numTriangles(){return this.engineGeometry.indexCount/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce(((e,r)=>e+V(r.data,r.indices)),0)}getRenderGeometry(){const e=this.material,r=this.engineGeometry,t=r.attributes,i=r.boundingInfo,n=e.createBufferWriter(),a=n.vertexBufferLayout,c=n.elementCount(t),o=a.createBuffer(c);return n.write(null,null,t,null,o,0),new Q(e,o.buffer,c,i)}intersect(e,r,t,i,n,a,c,o){const u=this.engineGeometry;this.material.intersect(u,e.transform.transform,e,t,i,((m,p,y)=>v(m,p,y,e,r,a,c,n,o)))}}function v(s,e,r,t,i,n,a,c,o){if(s<0||i&&!i(t.rayBegin,t.rayEnd,s))return;const u=new H(n.layerViewUid,n.graphicUid(c),r,a,o);if((t.results.min.distance==null||s<t.results.min.distance)&&t.results.min.set(l.LOD,u,s,e,t.transform.transform),(t.results.max.distance==null||s>t.results.max.distance)&&t.results.max.set(l.LOD,u,s,e,t.transform.transform),t.options.store===_.ALL){const m=new K(t.results.min.ray);m.set(l.LOD,u,s,e,t.transform.transform),t.results.all.push(m)}}let Y=class{constructor(e,r=null){this.geometry=e,this.textures=r}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}};class Z{constructor(e,r,t){this.components=e,this.minScreenSpaceRadius=r,this.pivotOffset=t;const i=g(this.components.map((n=>n.geometry)));this.numVertices=i.reduce(((n,a)=>n+a.numVertices),0)}}class ee{constructor(e){this.levels=e,this.levels.sort(((r,t)=>r.minScreenSpaceRadius===t.minScreenSpaceRadius?r.numVertices-t.numVertices:r.minScreenSpaceRadius-t.minScreenSpaceRadius))}getMaterials(){const e=[];return this.levels.forEach((r=>r.components.forEach((t=>e.push(t.geometry.material))))),g(e)}getTextures(){const e=new Array;return this.levels.forEach((r=>r.components.forEach((t=>{t.textures!=null&&e.push(...t.textures)})))),g(e)}getGeometries(){const e=new Array;return this.levels.forEach((r=>r.components.forEach((t=>{e.push(t.geometry)})))),g(e)}getEngineGeometries(){return this.getGeometries().map((e=>e.engineGeometry)).filter((e=>e!=null))}computeUsedMemory(){const e=this.getGeometries(),r=this.getTextures(),t=e.reduce(((i,n)=>i+n.computeUsedMemory()),0);return r.reduce(((i,n)=>i+n.usedMemory),0)+t}}function me(s){switch(s){case"sphere":case"cube":case"diamond":case"cylinder":case"cone":case"inverted-cone":case"tetrahedron":return!0}return!1}function he(s,e){const r=(t,i,n=!1)=>new ee(t.map((a=>{const c=i(a.tesselation);return n&&M(c),new Z([new Y(new X(c))],a.minScreenSpaceRadius)})));switch(s){case"sphere":return r([{tesselation:0,minScreenSpaceRadius:0},{tesselation:1,minScreenSpaceRadius:8},{tesselation:2,minScreenSpaceRadius:16},{tesselation:3,minScreenSpaceRadius:50},{tesselation:4,minScreenSpaceRadius:250}],(t=>N(e,.5,t)));case"cube":return r([{tesselation:0,minScreenSpaceRadius:0}],(()=>D(e,1)));case"cone":return r(S,(t=>L(e,1,.5,t,!1)),!0);case"inverted-cone":return r(S,(t=>L(e,1,.5,t,!0)),!0);case"cylinder":return r(S,(t=>A(e,1,.5,t,[0,0,1],[0,0,.5])));case"tetrahedron":return r([{tesselation:0,minScreenSpaceRadius:0}],(()=>W(e,1)),!0);case"diamond":return r([{tesselation:0,minScreenSpaceRadius:0}],(()=>P(e,1)),!0);default:return}}const S=[{tesselation:6,minScreenSpaceRadius:0},{tesselation:18,minScreenSpaceRadius:7},{tesselation:64,minScreenSpaceRadius:65}];export{me as S,Y as a,X as b,Z as f,ee as h,he as l,K as p};
