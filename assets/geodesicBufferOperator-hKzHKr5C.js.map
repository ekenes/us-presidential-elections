{"version":3,"mappings":";qOAIqR,IAAIA,EAAEC,EAAEC,EAAE,SAASC,GAAG,CAAC,MAAM,CAAC,CAACH,GAAGI,EAAC,CAAE,CAAC,eAAeC,GAAG,CAAC,GAAG,CAACF,EAAC,EAAG,CAAC,KAAK,CAACG,CAAC,EAAE,MAAM,QAAQ,IAAI,CAAAC,EAAA,IAAC,OAAO,6BAA6B,wCAAEC,EAAC,CAAE,CAAC,EAAER,EAAEM,EAAE,eAAeL,EAAEK,EAAE,aAAaJ,EAAEI,EAAE,UAAU,CAAC,CAAC,SAASG,EAAEH,EAAEE,EAAEJ,EAAE,GAAG,CAAC,GAAG,CAAC,UAAUM,EAAE,WAAW,aAAaV,EAAE,IAAI,KAAKG,CAAC,EAAEC,EAAED,IAAIK,EAAEG,EAAEH,EAAEL,EAAE,QAAQ,EAAEH,IAAIA,EAAEW,EAAEX,EAAEG,EAAE,QAAQ,IAAI,MAAME,EAAEJ,EAAEK,CAAC,EAAEG,EAAEJ,EAAE,oBAAmB,EAAG,OAAOH,EAAEU,EAAEP,EAAE,YAAW,EAAGI,EAAEI,EAAEH,CAAC,EAAEF,EAAER,CAAC,EAAES,CAAC,CAAC,CAAC,SAASK,EAAEN,EAAE,EAAEJ,EAAE,GAAG,CAAC,GAAG,CAAC,UAAUH,EAAE,WAAW,aAAaE,EAAE,IAAI,MAAME,EAAE,GAAG,KAAKI,CAAC,EAAEL,EAAEK,IAAI,EAAE,EAAE,KAAKH,GAAGK,EAAEL,EAAEG,EAAE,QAAQ,IAAIN,IAAIA,EAAEQ,EAAER,EAAEM,EAAE,QAAQ,IAAI,KAAK,CAACK,EAAEC,CAAC,EAAEf,EAAEQ,CAAC,EAAE,OAAOE,EAAEI,EAAEC,EAAEF,EAAEZ,CAAC,EAAE,EAAEE,EAAEE,CAAC,EAAE,KAAKC,GAAGJ,EAAEI,EAAES,CAAC,EAAC,EAAG,OAAOT,CAAC,CAAC","names":["a","m","c","u","i","p","e","__vitePreload","r","f","s","t","o","n","l","y"],"ignoreList":[0],"sources":["../../node_modules/@arcgis/core/geometry/operators/json/geodesicBufferOperator.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../core/arrayUtils.js\";import{convertUnit as t}from\"../../../core/unitUtils.js\";import{load as r,execute as o,isLoaded as i,executeMany as s}from\"../gx/operatorGeodesicBuffer.js\";import{geodeticCurveType as n}from\"../support/geodeticCurveType.js\";let a,m,c;function u(){return!!a&&i()}async function p(){if(!u()){const[e]=await Promise.all([import(\"../support/jsonConverter.js\"),r()]);a=e.fromGeometries,m=e.fromGeometry,c=e.toGeometry}}function f(e,r,i={}){let{curveType:s=\"geodesic\",maxDeviation:a=NaN,unit:u}=i;u&&(r=t(r,u,\"meters\"),a&&(a=t(a,u,\"meters\")));const p=m(e),f=p.getSpatialReference();return c(o(p.getGeometry(),f,n[s],r,a),f)}function l(r,o,i={}){let{curveType:m=\"geodesic\",maxDeviation:u=NaN,union:p=!1,unit:f}=i;f&&(o=o.map((e=>t(e,f,\"meters\"))),u&&(u=t(u,f,\"meters\")));const[l,y]=a(r);return s(l,y,n[m],o,u,p).map((e=>c(e,y))).filter(e)}export{f as execute,l as executeMany,u as isLoaded,p as load};\n"],"file":"assets/geodesicBufferOperator-hKzHKr5C.js"}