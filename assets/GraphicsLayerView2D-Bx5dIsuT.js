import{dh as m,di as c,c8 as g,cm as n,bI as d,bx as p,d5 as l,X as o,Y as w,$ as u}from"./index-CQU_kJbH.js";import{S as y,u as V}from"./LayerView-C-KBQGc7.js";import{t as v}from"./GraphicContainer-8uJLmgMN.js";import{O as f}from"./GraphicsView2D-C25TMV6u.js";import"./Container-DnwF1iI_.js";import"./AGraphicContainer-Cq_9O0BU.js";import"./TechniqueInstance-BXV9EPZF.js";import"./UpdateTracking2D-D6PLVb-v.js";import"./Utils-CR7dP3tk.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-4Ef3oPUu.js";import"./ProgramTemplate-BwYnZLSp.js";import"./TileContainer-LcCtjHhG.js";import"./WGLContainer-BQP1b39m.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-DyG2aAGn.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-DjmD2mZi.js";import"./FeatureCommandQueue-ftS0VCrO.js";import"./TechniqueType-pk2C5RYg.js";import"./GraphShaderModule-DLfC5jCi.js";import"./ShaderBuilder-BSjVW44r.js";import"./BindType-BBwFZqyN.js";import"./utils-DXn5n4Xi.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DC4vezE1.js";import"./AttributeStore-CrWln677.js";import"./queryUtils-BjkMHIe2.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CbhorFpi.js";import"./normalizeUtilsSync-CrAYI6k0.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures--gUskYqy.js";let h=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m((()=>{var i;return(i=this.layer)==null?void 0:i.visible}),(()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()}))]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map((t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer}))):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map((s=>s&&s.uid)):n.isCollection(i)&&i.length>0&&(r=i.map((s=>s&&s.uid)).toArray());const e=r==null?void 0:r.filter(d);if(!(e!=null&&e.length))return p();const a=(t==null?void 0:t.name)??l;return this._addHighlights(e,a),p((()=>!this.destroyed&&this._removeHighlights(e,a)))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],h.prototype,"graphicsView",void 0),h=o([u("esri.views.2d.layers.GraphicsLayerView2D")],h);const ri=h;export{ri as default};
//# sourceMappingURL=GraphicsLayerView2D-Bx5dIsuT.js.map
