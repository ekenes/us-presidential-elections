import{Q as N,a1 as j,X as d,Y as g,$ as B,au as T,dq as U,du as E,dw as O,ds as F,dv as K,a6 as W,d0 as P,cm as H,bO as J,jI as Y,di as C,gk as Q,fc as A,H as q,jJ as L,a3 as X,gn as Z,jK as tt}from"./index-CsYxis92.js";import{b as M,g as et,d as it}from"./kmlUtils--bRvOMxC.js";import{g as at,f as st,S as rt}from"./BitmapTechnique-xsBmo6O8.js";import{r as ot}from"./BitmapContainer--cplPS7Y.js";import{S as nt,u as lt}from"./LayerView-CjDjiX_H.js";import{t as R}from"./GraphicContainer-k30Nge3Q.js";import{O as k}from"./GraphicsView2D-ChfQun-z.js";import{execute as ht}from"./projectOperator-rAHMRhRu.js";import{_ as pt,s as mt,v as ct}from"./rasterProjectionHelper-BB0ki5qJ.js";import{v as dt,o as ut,n as gt}from"./RenderingContext-C2AueN2D.js";import{R as _t}from"./FramebufferObject-CNUjHNWM.js";import{m as wt}from"./rasterUtils-B0yipH-M.js";import"./Container-j7z6fulL.js";import"./GraphShaderModule-BEius9il.js";import"./ProgramTemplate-CD2Y8cfy.js";import"./ShaderBuilder-BwEp248m.js";import"./BindType-BBwFZqyN.js";import"./TechniqueType-pk2C5RYg.js";import"./bitmapUtils-Cm3t9oVl.js";import"./WGLContainer-CvPUXmJK.js";import"./Utils-pxRTfgIm.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-C4wX9ian.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-DWp7tJlC.js";import"./AGraphicContainer-4rAle7JM.js";import"./TechniqueInstance-CLapk6Id.js";import"./UpdateTracking2D-BWZ_qtr1.js";import"./TileContainer-BbJc8va7.js";import"./FeatureCommandQueue-DPkgjuBw.js";import"./utils-DoQsSR4v.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-D7EGu6-u.js";import"./AttributeStore-Df-DhI43.js";import"./queryUtils-lX73YBtE.js";import"./json-Wa8cmqdu.js";import"./timeSupport-D6YXwySD.js";import"./normalizeUtilsSync-CSis16jD.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-pOeYHId8.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./webglDeps-BT50gIqm.js";import"./NestedMap-BVvDppQU.js";import"./renderState-CK81QZ9B.js";import"./basicInterfaces-N86vRvDz.js";import"./glsl-Cj7KC756.js";import"./testSVGPremultipliedAlpha-fgM8jeXv.js";let _=class extends N{constructor(){super(...arguments),this.id=0,this.rotation=0,this.href="",this.extent=new j}};d([g({nonNullable:!0,json:{write:!0}})],_.prototype,"id",void 0),d([g({nonNullable:!0,json:{write:!0}})],_.prototype,"rotation",void 0),d([g({nonNullable:!0,json:{write:!0}})],_.prototype,"href",void 0),d([g({type:j,nonNullable:!0,json:{write:!0}})],_.prototype,"extent",void 0),_=d([B("esri.layers.support.KMLMapImage")],_);const p=class p{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(p._instance)return p._instanceRefCount++,p._instance;p._instanceRefCount=1,p._instance=this,this._ownsRctx=!0;const a=document.createElement("canvas").getContext("webgl2");a.getExtension("OES_texture_float"),this._rctx=new dt(a,{})}const s={applyProjection:!0,bilinear:!1,bicubic:!1},r=ut("raster/reproject","raster/reproject",new Map([["a_position",0]]),s);this._program=this._rctx.programCache.acquire(r.shaders.vertexShader,r.shaders.fragmentShader,r.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new gt(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,s,r=!1){const a=ht(t.extent,s),i=new T({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:n,y:h}=pt(i,s,t.extent);let l=(n+h)/2;const m=Math.round((a.xmax-a.xmin)/l),o=Math.round((a.ymax-a.ymin)/l);l=(a.width/m+a.height/o)/2;const D=new T({x:l,y:l,spatialReference:a.spatialReference}),x=mt({projectedExtent:a,srcBufferExtent:t.extent,pixelSize:D,hasWrapAround:!0,spacing:[16,16]}),f=wt(this._rctx,x),b=new U(m,o);b.wrapMode=E.CLAMP_TO_EDGE;const c=new _t(this._rctx,b);this._rctx.bindFramebuffer(c),this._rctx.setViewport(0,0,m,o),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(f,1),this._quad.bind();const{width:V=0,height:v=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",V,v),this._program.setUniform2fv("u_transformSpacing",x.spacing),this._program.setUniform2fv("u_transformGridSize",x.size),this._program.setUniform2f("u_targetImageSize",m,o),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),f.dispose(),r){const{width:u,height:I}=c,y=new ImageData(u??0,I??0);c.readPixels(0,0,u??0,I??0,O.RGBA,F.UNSIGNED_BYTE,y.data);const G=c.detachColorTexture();return c.dispose(),{texture:G,extent:a,imageData:y}}const S=c.detachColorTexture();return c.dispose(),{texture:S,extent:a}}reprojectBitmapData(t,s){const r=at(t.bitmapData)?st(t.bitmapData):t.bitmapData,a=new U;a.wrapMode=E.CLAMP_TO_EDGE,a.width=t.bitmapData.width,a.height=t.bitmapData.height;const i=new K(this._rctx,a,r),n=this.reprojectTexture({texture:i,extent:t.extent},s,!0);n.texture.dispose();const h=document.createElement("canvas"),l=n.imageData;return h.width=l.width,h.height=l.height,h.getContext("2d").putImageData(l,0,0),{bitmapData:h,extent:n.extent}}async loadAndReprojectBitmapData(t,s,r){const[a]=await Promise.all([W(t,{responseType:"image"}).then((m=>m.data)),ct()]),i=document.createElement("canvas");i.width=a.width,i.height=a.height;const n=i.getContext("2d");n.drawImage(a,0,0);const h=n.getImageData(0,0,i.width,i.height);if(s.spatialReference.equals(r))return{bitmapData:h,extent:s};const l=this.reprojectBitmapData({bitmapData:h,extent:s},r);return{bitmapData:l.bitmapData,extent:l.extent}}destroy(){this._ownsRctx?(p._instanceRefCount--,p._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),p._instance=null)):(this._quad.dispose(),this._program.dispose())}};p._instanceRefCount=0;let $=p;class z{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let w=class extends nt(lt){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new ot,this._kmlVisualData=new z,this._fetchController=null,this.allVisiblePoints=new P,this.allVisiblePolylines=new P,this.allVisiblePolygons=new P,this.allVisibleMapImages=new H}async hitTest(e,t){var r,a,i;const s=this.layer;return[(r=this._pointsView)==null?void 0:r.hitTest(e),(a=this._polylinesView)==null?void 0:a.hitTest(e),(i=this._polygonsView)==null?void 0:i.hitTest(e)].flat().filter(Boolean).map((n=>(n.layer=s,n.sourceLayer=s,{type:"graphic",graphic:n,layer:s,mapPoint:e})))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new k({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new k({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new k({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((t=>this._addMapImage(t))),e.removed.forEach((t=>this._removeMapImage(t)))})),J((()=>this.layer.visibleSublayers),(e=>{for(const t of this._kmlVisualData.allSublayers.values())t.visibility=0;for(const t of e){const s=this._kmlVisualData.allSublayers.get(t.id);s&&(s.visibility=1)}this._refreshCollections()}))]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new $}detach(){this._fetchController=Y(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=C(this._polygonsView),this._polylinesView=C(this._polylinesView),this._pointsView=C(this._pointsView),this._imageReprojector=C(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){var t,s;((t=this.view.spatialReference)!=null&&t.isWGS84||(s=this.view.spatialReference)!=null&&s.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(e.href,e.extent,this.view.spatialReference).then((r=>{const a=new rt(r.bitmapData);a.x=r.extent.xmin,a.y=r.extent.ymax,a.resolution=r.extent.width/r.bitmapData.width,a.rotation=e.rotation,this._mapImageContainer.addChild(a),this._bitmapIndex.set(e,a)}))}async _getViewDependentUrl(e,t){const{viewFormat:s,viewBoundScale:r,httpQuery:a}=e;if(s!=null){if(t==null)throw new Error("Loading this network link requires a view state.");let i;if(await Q(),r!=null&&r!==1){const u=new j(t.extent);u.expand(r),i=u}else i=t.extent;i=A(i,q.WGS84);const n=A(i,q.WebMercator),h=i.xmin,l=i.xmax,m=i.ymin,o=i.ymax,D=t.size[0]*t.pixelRatio,x=t.size[1]*t.pixelRatio,f=Math.max(n.width,n.height),b={"[bboxWest]":h.toString(),"[bboxEast]":l.toString(),"[bboxSouth]":m.toString(),"[bboxNorth]":o.toString(),"[lookatLon]":i.center.x.toString(),"[lookatLat]":i.center.y.toString(),"[lookatRange]":f.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":i.center.x.toString(),"[lookatTerrainLat]":i.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":i.center.x.toString(),"[cameraLat]":i.center.y.toString(),"[cameraAlt]":f.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":D.toString(),"[vertPixels]":x.toString(),"[terrainEnabled]":"0","[clientVersion]":tt,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},c=u=>{for(const I in u){let y;for(y in b)u[I]=u[I].replace(y,b[y])}},V=L(s);c(V);let v={};a!=null&&(v=L(a),c(v));const S=X(e.href);return S.query={...S.query,...V,...v},`${S.path}?${Z(V)}`}return e.href}async _fetchService(e){const t=new z;await this._loadVisualData(this.layer.url,t,e),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)))}_isSublayerVisible(e){const t=this._kmlVisualData.allSublayers.get(e);return!!(t!=null&&t.visibility)&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(e,t,s){return this._fetchParsedKML(e,s).then((async r=>{var a;for(const i of r.sublayers){t.allSublayers.set(i.id,i);const n=i.points?await M(i.points):[],h=i.polylines?await M(i.polylines):[],l=i.polygons?await M(i.polygons):[],m=((a=i.mapImages)==null?void 0:a.map((o=>_.fromJSON(o))))??[];if(t.allPoints.push(...n.map((o=>({item:o,sublayerId:i.id})))),t.allPolylines.push(...h.map((o=>({item:o,sublayerId:i.id})))),t.allPolygons.push(...l.map((o=>({item:o,sublayerId:i.id})))),t.allMapImages.push(...m.map((o=>({item:o,sublayerId:i.id})))),i.networkLink){const o=await this._getViewDependentUrl(i.networkLink,this.view.state);await this._loadVisualData(o,t,s)}}}))}_fetchParsedKML(e,t){return et(e,this.layer.spatialReference,this.layer.refreshInterval,t).then((s=>it(s.data)))}_removeMapImage(e){const t=this._bitmapIndex.get(e);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(e))}};d([g()],w.prototype,"_pointsView",void 0),d([g()],w.prototype,"_polylinesView",void 0),d([g()],w.prototype,"_polygonsView",void 0),d([g()],w.prototype,"updating",void 0),w=d([B("esri.views.2d.layers.KMLLayerView2D")],w);const ue=w;export{ue as default};
//# sourceMappingURL=KMLLayerView2D-DqpJfzyL.js.map
