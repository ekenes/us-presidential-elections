import{Q as y,X as i,Y as m,$ as d,a3 as f,a5 as g,a4 as w,a6 as $,hh as v,b0 as S,aF as h}from"./index-CQU_kJbH.js";import{d as j}from"./Association-CQ6Fi3Pw.js";let o=class extends y{constructor(e){super(e),this.associations=[]}};i([m({type:[j],json:{write:!0}})],o.prototype,"associations",void 0),o=i([d("esri.rest.networks.support.QueryAssociationsResult")],o);function I(s){const{returnDeletes:e,elements:r,gdbVersion:n,moment:a}=s.toJSON();return{returnDeletes:e,elements:JSON.stringify(r.map((t=>({globalId:t.globalId,networkSourceId:t.networkSourceId,terminalId:t.terminalId})))),types:JSON.stringify(s.types.map((t=>h.toJSON(t)))).replaceAll('"connectivity"','"junctionJunctionConnectivity"'),gdbVersion:n,moment:a??Date.now()}}async function N(s,e,r){const n=f(s),a={...I(e),f:"json"},t=g({...n.query,...a}),c=w(t,{...r,method:"post"}),u=`${n.path}/associations/query`,{data:p}=await $(u,c),l=o.fromJSON(p);return e.types.includes("connectivity")&&v(S.getLogger("esri/rest/networks/support/QueryAssociationsParameters"),"types",{replacement:"Please use 'junction-junction-connectivity' instead of 'connectivity'.",see:"https://arcg.is/11Tr8a#types",version:"4.29",warnOnce:!0}),l}export{N as queryAssociations};
//# sourceMappingURL=queryAssociations-CzoBNrHH.js.map
