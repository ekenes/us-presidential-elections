import{dS as v,h7 as S,aA as h,gv as w,dc as y,bO as b,d9 as k,h9 as E,eL as A,eD as C,ha as F,ar as G,hb as m,c4 as P,fc as $,b5 as I,fe as O,d3 as H,eG as R,X as a,Y as l,$ as L}from"./index-CsYxis92.js";import{t as Z}from"./memoize-DmxaQ-k8.js";import{a as x}from"./normalizeUtilsSync-CSis16jD.js";import{u as z}from"./featureConversionUtils-DWp7tJlC.js";import{u as M}from"./executeQueryForSnapping-pioq6Bkg.js";import{f as W}from"./FeatureStore-s8JtcRxa.js";import{L as N}from"./QueryEngine-BJek3YIf.js";import{y as q}from"./elevationInfoUtils-CtijzSkI.js";import{E as T,y as j}from"./hitTestSelectUtils-5TsuzTRd.js";import{o as D,i as J}from"./queryEngineUtils-aprBGWXO.js";import{i as g,r as B,n as f}from"./symbologySnappingCandidates-CACCTRfd.js";import"./queryUtils-lX73YBtE.js";import"./json-Wa8cmqdu.js";import"./timeSupport-D6YXwySD.js";import"./BoundsStore-DcXkQouQ.js";import"./PooledRBush-CThtIogi.js";import"./optimizedFeatureQueryEngineAdapter-DXNK-XHo.js";import"./WhereClauseCache-C1uFK1CZ.js";import"./WhereClause-BSh9HwUp.js";import"./QueryEngineCapabilities-CsRUnGk7.js";import"./utils-Xl0yxUlG.js";import"./utils-Dvqs4XPK.js";import"./ClassBreaksDefinition-BnFll2_j.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-KVas6-v_.js";import"./projectVectorToVector-Bx0wJylV.js";import"./projectPointToVector-CZKK0DT1.js";import"./geodesicUtils-DCq93vII.js";import"./plane-C3vJK9NG.js";import"./vectorStacks-CNtZQgxh.js";import"./mat3f64-B5o_lm6j.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-B8MIE0Ux.js";import"./spatialReferenceEllipsoidUtils-DLLy6_F5.js";import"./RouteLayerInteraction-BZkxIAk-.js";import"./GraphicsLayer-CkEB5WKH.js";import"./Stop-BiY4_vMg.js";import"./networkEnums-CNiesxWf.js";import"./geodeticLengthOperator-7pEK6mOC.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-BjrYfcFy.js";import"./lineSegment-COIXWBX2.js";import"./VertexSnappingCandidate-BITvc1EO.js";import"./PointSnappingHint-CZZ-2AiI.js";const _="graphics-collections";let n=class extends v{get updating(){return this._updatingHandles.updating}get _hasZ(){const e=this.view;return e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="map-notes")return g();const o=async(r,s)=>(await S(e.whenLayerView(t),s)).elevationAlignPointsInFeatures(r,s);return g(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:o})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return B(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d",o=this._extrudedPolygonSymbolsCount>0;return i&&t.type!=="map-notes"&&o?f(o,(async(r,s)=>{const p=await e.whenLayerView(t);return h(s),p.queryForSymbologySnapping({candidates:r,spatialReference:e.spatialReference},s)})):f()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new w,this._memoizedMakeGetGroundElevation=Z(J)}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources((e=>this._destroySource(e))),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add((()=>this.getGraphicsLayers()),(i=>{this._updatingHandles.removeHandles(_);for(const o of i)this._addMany(o.graphics.toArray()),this.addHandles([o.on("graphic-update",(r=>this._onGraphicUpdate(r))),this._updatingHandles.addOnCollectionChange((()=>o.graphics),(r=>this._onGraphicsChanged(r)))],_)}),y);const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="map-notes"&&e.elevationProvider&&this.addHandles([e.elevationProvider.on("elevation-change",(({context:i})=>{q(i,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()})),b((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),y),k((()=>t),["edits","apply-edits","graphic-update"],(()=>this._symbologySnappingFetcher.notifySymbologyChange()))])}async fetchCandidates(e,t){const{point:i,coordinateHelper:{spatialReference:o}}=e,r=await E(this._mapSources((d=>this._fetchCandidatesForSource(d,e,t))));h(t);const s=this._memoizedMakeGetGroundElevation(this.view,o),p=r.flat().map((d=>D(d,s)));return T(i,p),p}async _fetchCandidatesForSource(e,t,i){var u;const o=j({parameters:t,mode:((u=this.view)==null?void 0:u.type)??"2d"}),r=await M(e.queryEngine,o,i);h(i);const s=await this._snappingElevationAligner.alignCandidates(r.candidates,t.coordinateHelper.spatialReference,i);h(i);const p=await this._symbologySnappingFetcher.fetch(s,i);h(i);const d=p.length===0?s:[...s,...p];return this._snappingElevationFilter.filter(o,d)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some((t=>t.graphics.includes(e.graphic))))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],i=new Map;for(const o of e)o.geometry!=null&&(this._needsInitializeProjection(o.geometry.spatialReference)?(t.push(o.geometry.spatialReference),i.set(o.uid,o)):this._add(o));this._createPendingAdd(t,i)}_createPendingAdd(e,t){if(!e.length)return;const i=A((async s=>{await C(e.map((p=>({source:p,dest:this.spatialReference}))),{signal:s}),this._markLoadedSpatialReferences(e);for(const p of t.values())this._add(p)}));this._updatingHandles.addPromise(i.promise);const o={task:i,graphics:t},r=()=>F(this._pendingAdds,o);i.promise.then(r,r),this._pendingAdds.push(o)}_markLoadedSpatialReferences(e){for(const t of e){t.wkid!=null&&this._loadedWkids.add(t.wkid);const i=t.wkt2||t.wkt;i&&this._loadedWkts.add(i)}}_add(e){if(e.geometry==null||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=G.fromExtent(t));const i=this._ensureSource(t.type);if(i==null)return;const o=this._createOptimizedFeature(e.uid,t);o!=null&&(i.featureStore.add(o),m(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){if(e.wkid!=null&&this._loadedWkids.has(e.wkid))return!1;const t=e.wkt2||e.wkt;return(!t||!this._loadedWkts.has(t))&&!P(e,this.spatialReference)}_createOptimizedFeature(e,t){const i=$(x(t),this.spatialReference);if(!i)return null;const o=this._ensureGeometryHasZ(i),r=z(o,this._hasZ,!1);return new I(r,{[c]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=o=>{for(;o.length<3;)o.push(0)},i=e.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(t);break;case"polyline":i.paths.forEach((o=>o.forEach(t)));break;case"polygon":i.rings.forEach((o=>o.forEach(t)))}return i}_ensureSource(e){const t=this._sources[e];if(t!=null)return t;const i=this._createSource(e);return this._sources[e]=i,i}_createSource(e){const t=O.toJSON(e),i=this._hasZ,o=new W({geometryType:t,hasZ:i,hasM:!1});return{featureStore:o,queryEngine:new N({featureStore:o,fieldsIndex:R.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:t,hasM:!1,hasZ:i,featureIdInfo:{type:"object-id",fieldName:c},spatialReference:this.spatialReference,priority:H.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources((t=>this._removeFromSource(t,e)));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const i=t.uid;e.featureStore.has(i)&&(e.featureStore.removeById(t.uid),m(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:i,polyline:o,multipoint:r}=this._sources,s=[];return t!=null&&s.push(e(t)),i!=null&&s.push(e(i)),o!=null&&s.push(e(o)),r!=null&&s.push(e(r)),s}};a([l()],n.prototype,"getGraphicsLayers",void 0),a([l({constructOnly:!0})],n.prototype,"layerSource",void 0),a([l({constructOnly:!0})],n.prototype,"spatialReference",void 0),a([l({constructOnly:!0})],n.prototype,"view",void 0),a([l({readOnly:!0})],n.prototype,"updating",null),a([l({readOnly:!0})],n.prototype,"availability",void 0),a([l()],n.prototype,"_hasZ",null),a([l()],n.prototype,"_snappingElevationAligner",null),a([l()],n.prototype,"_snappingElevationFilter",null),a([l()],n.prototype,"_symbologySnappingFetcher",null),a([l()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),n=a([L("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};
//# sourceMappingURL=GraphicsSnappingSource-DGxkVcIg.js.map
