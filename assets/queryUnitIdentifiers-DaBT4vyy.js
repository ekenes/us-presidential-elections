import{Q as g,X as a,Y as i,aH as u,$ as y,a3 as m,a5 as b,a4 as j,a6 as U}from"./index-0sjr7qut.js";let s=class extends g{constructor(n){super(n),this.container=null,this.ranges=null}readContainer(n,e){return{sourceId:e.sourceId,globalId:e.globalId}}readRanges(n,e){return[...e.gaps.map((t=>({firstUnit:t.start,numUnits:t.end-t.start+1,isGap:!0}))),...e.unitIdentifiers.map((t=>({firstUnit:t.firstUnit,numUnits:t.numUnits,isGap:!1,content:{sourceId:t.sourceId,globalId:t.globalId}})))]}};a([i({type:Object})],s.prototype,"container",void 0),a([u("container",["sourceId","globalId"])],s.prototype,"readContainer",null),a([i({type:[Object]})],s.prototype,"ranges",void 0),a([u("ranges",["gaps","unitIdentifiers"])],s.prototype,"readRanges",null),s=a([y("esri.rest.networks.unitIdentifiers.support.UnitQueryResult")],s);async function h(n,e,t){const r=m(n),o=e.toJSON();e.objects&&(o.objects=JSON.stringify(e.objects));const d={...o,f:"json"},p=b({...r.query,...d}),c=j(p,{...t,method:"post"}),l=`${r.path}/unitIdentifiers/query`,{data:f}=await U(l,c);return f.objects.map((I=>s.fromJSON(I)))}export{h as queryUnitIdentifiers};
//# sourceMappingURL=queryUnitIdentifiers-DaBT4vyy.js.map
