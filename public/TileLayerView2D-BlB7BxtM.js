import{d0 as w,d1 as y,d2 as I,d3 as T,d4 as V,bx as u,d5 as H,t as v,d6 as n,d7 as d,d8 as C,b0 as q,X as c,Y as f,$ as U}from"./index-CMJIB_wA.js";import"./UpdateTracking2D-DJogAc3A.js";import"./Container-DVQ6NIPW.js";import"./WGLContainer-Dea6IRK6.js";import"./Utils-cJyfnEYj.js";import"./StyleDefinition-CBsQNEZH.js";import"./constants-BwsikM5h.js";import"./GridShader-C33sLUU5.js";import"./TechniqueType-pk2C5RYg.js";import"./FramebufferObject-D8yXd-Mb.js";import"./FeatureCommandQueue-BNRE0JCe.js";import"./PieChartMeshWriter-DzoB3x-9.js";import"./constants-BFLErLYb.js";import"./renderState-CMZRV87T.js";import"./glsl-Cj7KC756.js";import"./testSVGPremultipliedAlpha-CfUxHFdY.js";import{O as b}from"./GraphicsView2D-BL1aG29w.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import{r as P,o,n as _}from"./imageUtils-CkclT6uY.js";import{S as Q,u as S}from"./LayerView-CHW9KnnY.js";import{a as G}from"./HighlightGraphicContainer-C0tFO827.js";import{i as L}from"./RefreshableLayerView-DWOFB8Vt.js";import{_ as k,P as F,i as z}from"./MapServiceLayerViewHelper-COK5wB43.js";import{r as E}from"./drapedUtils-BXbmT3rf.js";import"./ProgramTemplate-PDnaq3Rn.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./config-DHajyIwB.js";import"./featureConversionUtils-BHWHIBxw.js";import"./GraphShaderModule-DVVft5hf.js";import"./ShaderBuilder-DfdliIqV.js";import"./BindType-BBwFZqyN.js";import"./utils-DU7OvYMh.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-D5VgcVvI.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CM2UsK_4.js";import"./libtess-FC-hEnnK.js";import"./basicInterfaces-N86vRvDz.js";import"./AttributeStore-DIcwkZRq.js";import"./queryUtils-CZvpuD84.js";import"./json-Wa8cmqdu.js";import"./timeSupport-bWwPy540.js";import"./normalizeUtilsSync-DWtMsRjE.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-BBAV9yxw.js";import"./BitmapTechnique-BCJemcSI.js";import"./bitmapUtils-mK1nUdPs.js";import"./TileContainer-zKhmacuu.js";import"./AGraphicContainer-lrOb81a0.js";import"./TechniqueInstance-Crm9nnYs.js";import"./popupUtils-DLSAyeO8.js";const W=[0,0];let l=class extends L(P(Q(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var e;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(e=this._highlightView)==null||e.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,e=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,e==null?void 0:e.effectiveMinLOD,e==null?void 0:e.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(i,h)=>this.fetchTile(i,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),k(this,this.layer)){const i=this._highlightView=new b({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new G(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new F({createFetchPopupFeaturesQueryGeometry:(h,s)=>E(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:h,property:s})=>i.graphicUpdateHandler({graphic:h,property:s}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add((()=>this.resampling),(()=>{this.doRefresh()}))),super.attach()}detach(){var t,e;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(e=this._highlightView)==null||e.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,e){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,e):[]}highlight(t,e){const i=z(t);if(i.length===0)return u();const h=(e==null?void 0:e.name)??H;return this._addHighlightGraphics(i,h),u((()=>!this.destroyed&&this._removeHighlightGraphics(i,h)))}_processHighlight(){var e;const t=this._getHighlights();(e=this._highlightView)==null||e.setHighlight(t)}_addHighlightGraphics(t,e){this._highlightGraphics.addMany(t),this._addHighlights(t.map((i=>i.uid)),e)}_removeHighlightGraphics(t,e){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map((i=>i.uid)),e)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return v((e=this.layer.tileInfo)==null?void 0:e.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh((t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t))))}}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(W,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",(()=>t.destroy())),this.requestUpdate()}async fetchTile(t,e={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,e):this._fetchTileWithoutTilemapCache(t,e)}async _fetchTileWithoutTilemapCache(t,e={}){const{signal:i,resamplingLevel:h=0}=e;try{return await this._fetchImage(t,i)}catch(s){if(n(s))throw s;if(!this.resampling)return o(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(t.id);if(r){const a=new d(r),p=await this._fetchTileWithoutTilemapCache(a,{...e,resamplingLevel:h+1});return _(this._tileInfoView,p,a,t)}}return o(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,e={}){const i=this.tilemapCache,{signal:h,resamplingLevel:s=0}=e,r=new d(0,0,0,0);let a,p=null;try{if(p=await i.fetchAvailabilityUpsample(t.level,t.row,t.col,r,{signal:h}),!this.resampling&&r.level!==t.level)return await C(e),o(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&p==="unknown"&&s<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){r.set(g);try{a=await this._fetchTileWithTilemapCache(r,{...e,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,r,t):a:o(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",(()=>this.requestUpdate()))}catch(e){n(e)||q.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}};c([f()],l.prototype,"resampling",null),c([f()],l.prototype,"tilemapCache",null),l=c([U("esri.views.2d.layers.TileLayerView2D")],l);const Et=l;export{Et as default};
//# sourceMappingURL=TileLayerView2D-BlB7BxtM.js.map
