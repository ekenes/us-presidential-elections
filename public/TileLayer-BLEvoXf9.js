import{dN as _,dO as S,fG as T,fH as b,fR as w,fI as O,fF as $,fT as R,fS as U,dQ as W,bF as P,H as g,D as I,a6 as c,gn as j,ga as L,r as h,bE as N,bU as A,fd as B,ax as M,dP as k,X as a,Y as o,aH as C,a2 as D,go as J,fQ as G,$ as q}from"./index-D4VD4zNo.js";import{p as H}from"./ArcGISCachedService-CEAfK7Ie.js";import{m as E,f as V,a as x}from"./SublayersOwner-Cs8rj9oE.js";import{o as f}from"./imageBitmapUtils-D4X3azSS.js";import"./TileInfoTilemapCache-q2QSba2W.js";import"./TilemapCache-dzIE9ceu.js";import"./QueryTask-FgNvtBw_.js";import"./executeForIds-DXzt5glJ.js";import"./featureConversionUtils-BLFuUL7Y.js";var y;const v=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let s=y=class extends _(S(E(H(V(T(b(w(O($(R(U(k)))))))))))){constructor(...e){super(...e),this.listMode="show",this.elevationInfo=new W({mode:"on-the-ground"}),this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(P).then((()=>this._fetchService(r)))),Promise.resolve(this)}get attributionDataUrl(){var r;const e=(r=this.parsedUrl)==null?void 0:r.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){var t;return(e=e||((t=r.tileInfo)==null?void 0:t.spatialReference))&&g.fromJSON(e)}writeSublayers(e,r,t,i){if(!this.loaded||!e)return;const l=e.slice().reverse().flatten((({sublayers:n})=>n&&n.toArray().reverse())).toArray(),p=[],u={writeSublayerStructure:!1,...i};l.forEach((n=>{const d=n.write({},u);p.push(d)})),p.some((n=>Object.keys(n).length>1))&&(r.layers=p)}get tileServers(){var e;return this._getDefaultTileServers((e=this.parsedUrl)==null?void 0:e.path)}castTileServers(e){return Array.isArray(e)?e.map((r=>I(r).path)):null}fetchTile(e,r,t,i={}){const{signal:l}=i,p=this.getTileUrl(e,r,t),u={responseType:"image",signal:l,query:{...this.refreshParameters}};return c(p,u).then((n=>n.data))}async fetchImageBitmapTile(e,r,t,i={}){const{signal:l}=i;if(this.fetchTile!==y.prototype.fetchTile){const d=await this.fetchTile(e,r,t,i);return f(d,e,r,t,l)}const p=this.getTileUrl(e,r,t),u={responseType:"blob",signal:l,query:{...this.refreshParameters}},{data:n}=await c(p,u);return f(n,e,r,t,l)}getTileUrl(e,r,t){var u,n;const i=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,l=j({...(u=this.parsedUrl)==null?void 0:u.query,blankTile:!i&&null,...this.customParameters,token:this.apiKey}),p=this.tileServers;return`${p&&p.length?p[r%p.length]:(n=this.parsedUrl)==null?void 0:n.path}/tile/${e}/${r}/${t}${l?"?"+l:""}`}loadAll(){return L(this,(e=>{e(this.allSublayers)}))}_fetchService(e){return new Promise(((r,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new h("tile-layer:undefined-url","layer's url is not defined");const i=N(this.parsedUrl.path);if(i!=null&&i.serverType==="ImageServer")throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)})).then((r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!A(t))return this._fetchServerVersion(t,e).then((i=>{this.read({currentVersion:i})})).catch((()=>{}))}))}_fetchServerVersion(e,r){if(!B(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then((i=>{var l;if((l=i.data)!=null&&l.currentVersion)return i.data.currentVersion;throw new h("tile-layer:version-not-available","Server did not provide a version")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(e==null)return null;let r;e=e.toLowerCase();for(let t=0,i=v.length;t<i;t++)if(r=v[t],r.toLowerCase().includes(e))return M("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(e==null)return[];const r=e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[m]}};a([o({readOnly:!0})],s.prototype,"attributionDataUrl",null),a([o({type:["show","hide","hide-children"]})],s.prototype,"listMode",void 0),a([o({json:{read:!0,write:!0}})],s.prototype,"blendMode",void 0),a([o()],s.prototype,"elevationInfo",void 0),a([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],s.prototype,"isReference",void 0),a([o({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],s.prototype,"operationalLayerType",void 0),a([o({type:Boolean})],s.prototype,"resampling",void 0),a([o()],s.prototype,"sourceJSON",void 0),a([o({type:g})],s.prototype,"spatialReference",void 0),a([C("spatialReference",["spatialReference","tileInfo"])],s.prototype,"readSpatialReference",null),a([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),a([o({readOnly:!0})],s.prototype,"sublayers",void 0),a([D("sublayers",{layers:{type:[x]}})],s.prototype,"writeSublayers",null),a([o({json:{read:!1,write:!1}})],s.prototype,"popupEnabled",void 0),a([o()],s.prototype,"tileServers",null),a([J("tileServers")],s.prototype,"castTileServers",null),a([o({readOnly:!0,json:{read:!1}})],s.prototype,"type",void 0),a([o(G)],s.prototype,"url",void 0),s=y=a([q("esri.layers.TileLayer")],s);const m=Symbol("default-fetch-tile");s.prototype.fetchTile[m]=!0;const te=s;export{te as default};
//# sourceMappingURL=TileLayer-BLEvoXf9.js.map
