{"version":3,"mappings":"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","names":["t","e","r","o","__vitePreload","n","a","s","i","c"],"ignoreList":[0],"sources":["../../node_modules/@arcgis/core/arcade/geometry/operatorsWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{fromJSON as e}from\"../../geometry/support/jsonUtils.js\";function t(e,t){let r;return{loaded:!1,load:()=>r??=t().then((t=>{o[e]={loaded:!0,execute:t}}))}}function r(e){return null==e?null:e.toJSON()}const o={disjoint:t(\"disjoint\",(()=>import(\"../../geometry/operators/json/disjointOperator.js\").then((e=>e.execute)))),intersects:t(\"intersects\",(()=>import(\"../../geometry/operators/json/intersectsOperator.js\").then((e=>e.execute)))),touches:t(\"touches\",(()=>import(\"../../geometry/operators/json/touchesOperator.js\").then((e=>e.execute)))),crosses:t(\"crosses\",(()=>import(\"../../geometry/operators/json/crossesOperator.js\").then((e=>e.execute)))),within:t(\"within\",(()=>import(\"../../geometry/operators/json/withinOperator.js\").then((e=>e.execute)))),contains:t(\"contains\",(()=>import(\"../../geometry/operators/json/containsOperator.js\").then((e=>e.execute)))),overlaps:t(\"overlaps\",(()=>import(\"../../geometry/operators/json/overlapsOperator.js\").then((e=>e.execute)))),equals:t(\"equals\",(async()=>{const t=await import(\"../../geometry/operators/equalsOperator.js\");return(r,o)=>t.execute(e(r),e(o))})),relate:t(\"relate\",(async()=>{const t=await import(\"../../geometry/operators/relateOperator.js\");return(r,o,n)=>t.execute(e(r),e(o),n)})),intersection:t(\"intersection\",(()=>import(\"../../geometry/operators/json/intersectionOperator.js\").then((e=>e.execute)))),union:t(\"union\",(()=>import(\"../../geometry/operators/json/unionOperator.js\").then((e=>e.executeMany)))),difference:t(\"difference\",(async()=>{const t=await import(\"../../geometry/operators/differenceOperator.js\");return(o,n)=>r(t.execute(e(o),e(n)))})),symmetricDifference:t(\"symmetricDifference\",(async()=>{const t=await import(\"../../geometry/operators/symmetricDifferenceOperator.js\");return(o,n)=>r(t.execute(e(o),e(n)))})),clip:t(\"clip\",(async()=>{const t=await import(\"../../geometry/operators/clipOperator.js\");return(o,n)=>r(t.execute(e(o),e(n)))})),cut:t(\"cut\",(async()=>{const t=await import(\"../../geometry/operators/cutOperator.js\");return(o,n)=>t.execute(e(o),e(n)).map((e=>r(e)))})),area:t(\"area\",(async()=>{const t=await import(\"../../geometry/operators/areaOperator.js\"),{convertFromSpatialReferenceUnit:r,toAreaUnit:o}=await import(\"./unitConversion.js\");return(n,a)=>{const s=t.execute(e(n));return r(n.spatialReference,o(a),s)}})),geodeticArea:t(\"geodeticArea\",(async()=>{const t=await import(\"../../geometry/operators/geodeticAreaOperator.js\"),{convert:r,squareMeters:o,toAreaUnit:n}=await import(\"./unitConversion.js\");return await t.load(),(a,s,i)=>{const c=t.execute(e(a),{curveType:i});return r(o,n(s),c)}})),length:t(\"length\",(async()=>{const e=await import(\"../../geometry/operators/json/lengthOperator.js\"),{convertFromSpatialReferenceUnit:t,toLengthUnit:r}=await import(\"./unitConversion.js\");return(o,n)=>{const a=e.execute(o);return t(o.spatialReference,r(n),a)}})),geodeticLength:t(\"geodeticLength\",(async()=>{const t=await import(\"../../geometry/operators/geodeticLengthOperator.js\"),{convert:r,meters:o,toLengthUnit:n}=await import(\"./unitConversion.js\");return await t.load(),(a,s,i)=>{const c=t.execute(e(a),{curveType:i});return r(o,n(s),c)}})),distance:t(\"distance\",(async()=>{const t=await import(\"../../geometry/operators/distanceOperator.js\"),{convertFromSpatialReferenceUnit:r,toLengthUnit:o}=await import(\"./unitConversion.js\");return(n,a,s)=>{const i=t.execute(e(n),e(a));return r(n.spatialReference,o(s),i)}})),densify:t(\"densify\",(async()=>{const t=await import(\"../../geometry/operators/densifyOperator.js\"),{convertToSpatialReferenceUnit:o,toLengthUnit:n}=await import(\"./unitConversion.js\");return(a,s,i)=>(s=o(n(i),a.spatialReference,s),r(t.execute(e(a),s)))})),geodeticDensify:t(\"geodeticDensify\",(async()=>{const t=await import(\"../../geometry/operators/geodeticDensifyOperator.js\"),{convert:o,meters:n,toLengthUnit:a}=await import(\"./unitConversion.js\");return await t.load(),(s,i,c,p)=>(i=o(a(c),n,i),r(t.execute(e(s),i,{curveType:p})))})),generalize:t(\"generalize\",(async()=>{const t=await import(\"../../geometry/operators/generalizeOperator.js\"),{convertToSpatialReferenceUnit:o,toLengthUnit:n}=await import(\"./unitConversion.js\");return(a,s,i,c)=>(s=o(n(i),a.spatialReference,s),r(t.execute(e(a),s,c)))})),buffer:t(\"buffer\",(async()=>{const e=await import(\"../../geometry/operators/json/bufferOperator.js\"),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await import(\"./unitConversion.js\");return(o,n,a)=>(n=t(r(a),o.spatialReference,n),e.execute(o,n))})),geodesicBuffer:t(\"geodesicBuffer\",(async()=>{const e=await import(\"../../geometry/operators/json/geodesicBufferOperator.js\"),{convert:t,meters:r,toLengthUnit:o}=await import(\"./unitConversion.js\");return await e.load(),(n,a,s,i)=>(a=t(o(s),r,a),e.execute(n,a,{curveType:i}))})),offset:t(\"offset\",(async()=>{const e=await import(\"../../geometry/operators/json/offsetOperator.js\"),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await import(\"./unitConversion.js\");return(o,n,a,s)=>(n=t(r(a),o.spatialReference,n),e.execute(o,n,s))})),rotate:t(\"rotate\",(async()=>{const t=await import(\"../../geometry/operators/affineTransformOperator.js\"),{default:o}=await import(\"../../geometry/operators/support/Transformation.js\");return(n,a,s,i)=>{const c=(new o).rotate(a,s,i);return r(t.execute(e(n),c))}})),centroid:t(\"centroid\",(async()=>{const t=await import(\"../../geometry/operators/centroidOperator.js\");return o=>r(t.execute(e(o)))})),labelPoint:t(\"labelPoint\",(async()=>{const t=await import(\"../../geometry/operators/labelPointOperator.js\");return o=>r(t.execute(e(o)))})),simplify:t(\"simplify\",(()=>import(\"../../geometry/operators/json/simplifyOperator.js\").then((e=>e.execute)))),isSelfIntersecting:t(\"isSelfIntersecting\",(async()=>{const{NonSimpleResult:t}=await import(\"../../chunks/OperatorDefinitions.js\"),r=await import(\"../../geometry/operators/simplifyOGCOperator.js\"),o=new Set([5,6,7,10,11,12]);return n=>{const a=new t;return!r.isSimple(e(n),a)&&o.has(a.m_reason)}})),isSimple:t(\"isSimple\",(()=>import(\"../../geometry/operators/json/simplifyOperator.js\").then((e=>e.isSimple)))),convexHull:t(\"convexHull\",(()=>import(\"../../geometry/operators/json/convexHullOperator.js\").then((e=>e.execute)))),getNearestCoordinate:t(\"getNearestCoordinate\",(async()=>{const t=await import(\"../../geometry/operators/proximityOperator.js\");return(o,n,a)=>{const s=t.getNearestCoordinate(e(o),e(n),a);return{...s,coordinate:r(s.coordinate)}}})),getNearestVertex:t(\"getNearestVertex\",(async()=>{const t=await import(\"../../geometry/operators/proximityOperator.js\");return(o,n)=>{const a=t.getNearestVertex(e(o),e(n));return{...a,coordinate:r(a.coordinate)}}}))};function n(e,t){const r=o[e];return r.loaded?r.execute.apply(void 0,t):r.load().then((()=>n(e,t)))}export{n as invokeGeometryOp};\n"],"file":"public/operatorsWorker-C_i_Gdjh.js"}