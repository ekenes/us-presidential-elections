import{Q as y,a0 as f,X as e,Y as s,aH as v,$ as x,a3 as h,a5 as j,a4 as E,a6 as O}from"./index-D4VD4zNo.js";import{t as S}from"./utils-C_9mGN7E.js";import"./applyEditsUtils-DVnxazbY.js";import"./MeshTransform-DecgNnDy.js";import"./mat4f64-q_b6UJoq.js";import"./quat-CNLPSiKs.js";import"./mat3f64-B5o_lm6j.js";import"./quatf64-aQ5IuZRd.js";import"./axisAngleDegrees-BytpTgX9.js";import"./editingSupport-BIJLYcWa.js";var o;let t=o=class extends y{static from(r){return f(o,r)}constructor(r){super(r),this.circuits=null,this.moment=null,this.exceededTransferLimit=!1,this.serviceEdits=null}readServiceEdits(r,i){return S(r)}};e([s({json:{type:[Object]}})],t.prototype,"circuits",void 0),e([s({type:Date})],t.prototype,"moment",void 0),e([s({type:Boolean,json:{type:Boolean,write:!0}})],t.prototype,"exceededTransferLimit",void 0),e([s({type:[Object]})],t.prototype,"serviceEdits",void 0),e([v("serviceEdits")],t.prototype,"readServiceEdits",null),t=o=e([x("esri.rest.networks.circuits.support.ExportCircuitsResult")],t);async function g(r,i,p){const a=h(r),c=i.toJSON();i.circuits&&(c.circuits=JSON.stringify(i.circuits));const n={...c,f:"json"},m=j({...a.query,...n}),u=E(m,{...p,method:"post"}),d=`${a.path}/circuits/export`,{data:l}=await O(d,u);return t.fromJSON(l)}export{g as exportCircuits};
//# sourceMappingURL=exportCircuits-Bpq79Ew3.js.map
