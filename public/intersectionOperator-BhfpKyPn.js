import{bI as p}from"./index-CMJIB_wA.js";import{o as c,u as f}from"./operatorIntersection-pLHhZ5Wd.js";import{fromGeometry as n,toGeometry as m,fromGeometryToGXGeometry as i,fromGeometries as s}from"./jsonConverter-DW2EeUA0.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Point2D-BRB9V_5r.js";import"./ProjectionTransformation-BhxzjJ1R.js";import"./Envelope2D-DJjAtNGr.js";import"./Transformation2D-CqNH2kL4.js";import"./OperatorDefinitions-DP7_WWTp.js";function I(t,r){const o=n(t),e=o.getSpatialReference();return m(c(o.getGeometry(),i(r),e),e)}function L(t,r){const[o,e]=s(t);return f(o,i(r),e,7).map((a=>m(a,e))).filter(p)}export{I as execute,L as executeMany};
//# sourceMappingURL=intersectionOperator-BhfpKyPn.js.map
